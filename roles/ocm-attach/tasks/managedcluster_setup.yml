---
- name: "[MC] Verify valid cluster name"
  assert:
    that: ocm_managedcluster_name is regex('^[a-z0-9]([-a-z0-9]*[a-z0-9])?$')
    fail_msg: "ocm_managedcluster_name failed regex validation"
    success_msg: "{{ ocm_managedcluster_name }} is valid"

- name: "[MC] Derive import name"
  set_fact:
    cluster_import: "{{ ocm_managedcluster_name }}-import"

- name: "[MC] Get CRDs from Hub for the new ManagedCluster"
  set_fact:
    import_crds: "{{ lookup('k8s', kubeconfig=ocm_hub_kubeconfig, api_version='v1', kind='Secret', namespace=ocm_managedcluster_name, resource_name=cluster_import) | json_query(query) }}"
  vars:
    query: "data.\"crds.yaml\""

- name: "[MC] Get ROs from Hub for the new ManagedCluster"
  set_fact:
    import_ros: "{{ lookup('k8s', kubeconfig=ocm_hub_kubeconfig, api_version='v1', kind='Secret', namespace=ocm_managedcluster_name, resource_name=cluster_import) | json_query(query) }}"
  vars:
    query: "data.\"import.yaml\""

- name: "[MC] Apply CRDs to new ManagedCluster"
  kubernetes.core.k8s:
    state: present
    kubeconfig: "{{ ocm_managedcluster_kubeconfig }}"
    definition: "{{ import_crds | b64decode }}"

- name: "[MC] Apply ROs to new ManagedCluster"
  kubernetes.core.k8s:
    state: present
    kubeconfig: "{{ ocm_managedcluster_kubeconfig }}"
    definition: "{{ import_ros | b64decode }}"
