---
- name: "[HUB] Verify valid cluster name"
  assert:
    that: ocm_managedcluster_name is regex('^[a-z0-9]([-a-z0-9]*[a-z0-9])?$')
    fail_msg: "ocm_managedcluster_name failed regex validation"
    success_msg: "{{ ocm_managedcluster_name }} is valid"

- name: "[HUB] Check if ManagedCluster Registered"
  kubernetes.core.k8s_info:
    kubeconfig: "{{ ocm_hub_kubeconfig }}"
    api_version: cluster.open-cluster-management.io/v1
    kind: ManagedCluster
    name: "{{ ocm_managedcluster_name }}"
  register: ocm_mc_obj

- name: "[HUB] Set ocm_mc_registered"
  set_fact:
    ocm_mc_registered: "{{ ocm_mc_obj.resources | length == 1 }}"

- name: Register Managed Cluster
  block:
    - name: "[HUB] Create ManagedCluster"
      kubernetes.core.k8s:
        state: present
        kubeconfig: "{{ ocm_hub_kubeconfig }}"
        template: managedcluster.yml
        wait: true
        wait_condition:
          type: 'HubAcceptedManagedCluster'
          reason: 'HubClusterAdminAccepted'
          status: 'True'
        wait_timeout: 60

    - name: "[HUB] Create KlusterAddonConfig"
      kubernetes.core.k8s:
        state: present
        kubeconfig: "{{ ocm_hub_kubeconfig }}"
        template: klusterletaddonconfig.yml
  when:
    - not ocm_mc_registered


- name: "[HUB] Pull ManagedCluster Status"
  set_fact:
    ocm_mc_status: "{{ lookup('kubernetes.core.k8s', kubeconfig=ocm_hub_kubeconfig, api_version='cluster.open-cluster-management.io/v1', kind='ManagedCluster', resource_name=ocm_managedcluster_name) | json_query(query) }}"
  vars:
    query: "status.conditions"

- name: Debug
  debug:
    msg: "Item: {{ item }}"
  with_items: "{{ ocm_mc_status }}"

- name: Quit
  assert:
    that: false

- name: Attach Managed Cluster
  block:
    - name: "[MC] Derive import name"
      set_fact:
        cluster_import: "{{ ocm_managedcluster_name }}-import"

    - name: "[MC] Get CRDs from Hub for the new ManagedCluster"
      set_fact:
        import_crds: "{{ lookup('k8s', kubeconfig=ocm_hub_kubeconfig, api_version='v1', kind='Secret', namespace=ocm_managedcluster_name, resource_name=cluster_import) | json_query(query) }}"
      vars:
        query: "data.\"crds.yaml\""

    - name: "[MC] Get ROs from Hub for the new ManagedCluster"
      set_fact:
        import_ros: "{{ lookup('k8s', kubeconfig=ocm_hub_kubeconfig, api_version='v1', kind='Secret', namespace=ocm_managedcluster_name, resource_name=cluster_import) | json_query(query) }}"
      vars:
        query: "data.\"import.yaml\""

    - name: "[MC] Apply CRDs to new ManagedCluster"
      kubernetes.core.k8s:
        state: present
        kubeconfig: "{{ ocm_managedcluster_kubeconfig }}"
        definition: "{{ import_crds | b64decode }}"

    - name: "[MC] Apply ROs to new ManagedCluster"
      kubernetes.core.k8s:
        state: present
        kubeconfig: "{{ ocm_managedcluster_kubeconfig }}"
        definition: "{{ import_ros | b64decode }}"
  when: false
#    - not ocm_mc_reported
